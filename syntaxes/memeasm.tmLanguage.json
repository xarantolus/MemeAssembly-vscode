{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "MemeAssembly",
	"patterns": [
		{
			"include": "#additions"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#commands"
		},
		{
			"match": "\\S+",
			"name": "invalid.illegal"
		}
	],
	"repository": {
		"commands": {
			"patterns": [
				{
					"include": "#stack-operations"
				},
				{
					"include": "#register-manipulation"
				},
				{
					"include": "#functions"
				},
				{
					"include": "#io-operations"
				},
				{
					"include": "#logical-operations"
				},
				{
					"include": "#arithmetic-operations"
				},
				{
					"include": "#random-commands"
				},
				{
					"include": "#debug-commands"
				},
				{
					"include": "#jumps-and-markers"
				}
			]
		},
		"64bit-registers": {
			"patterns": [
				{
					"include": "#pointers"
				},
				{
					"comment": "64 bit registers",
					"name": "constant.language",
					"match": "(?i)\\b(RAX|RBX|RCX|RDX|RSI|RDI|RSP|RBP|R8|R9|R10|R11|R12|R13|R14|R15)\\b",
					"captures": {
						"1": {
							"name": "constant.language"
						}
					}
				}
			]
		},
		"32bit-registers": {
			"patterns": [
				{
					"include": "#pointers"
				},
				{
					"comment": "32 bit registers",
					"name": "constant.language",
					"match": "(?i)\\b(EAX|EBX|ECX|EDX|ESI|EDI|ESP|EBP|R8D|R9D|R10D|R11D|R12D|R13D|R14D|R15D)\\b",
					"captures": {
						"1": {
							"name": "constant.language"
						}
					}
				}
			]
		},
		"16bit-registers": {
			"patterns": [
				{
					"include": "#pointers"
				},
				{
					"comment": "16 bit registers",
					"match": "(?i)\\b(AX|BX|CX|DX|SI|DI|SP|BP|R8W|R9W|R10W|R11W|R12W|R13W|R14W|R15W)\\b",
					"captures": {
						"1": {
							"name": "constant.language"
						}
					}
				}
			]
		},
		"8bit-registers": {
			"patterns": [
				{
					"include": "#pointers"
				},
				{
					"comment": "8 bit registers",
					"match": "(?i)\\b(AH|AL|BH|BL|CH|CL|DH|DL|SIL|DIL|SPL|BPL|R8B|R9B|R10B|R11B|R12B|R13B|R14B|R15B)\\b",
					"captures": {
						"1": {
							"name": "constant.language"
						}
					}
				}
			]
		},
		"decimal-number": {
			"patterns": [
				{
					"comment": "Decimal number constants",
					"match": "([-+]?\\d+)\\b",
					"captures": {
						"1": {
							"name": "constant.numeric.decimal"
						}
					}
				}
			]
		},
		"ascii-character": {
			"patterns": [
				{
					"comment": "Space",
					"match": "\\b(space)\\b",
					"captures": {
						"1": {
							"name": "constant.character.escape"
						}
					}
				},
				{
					"comment": "Escape sequences",
					"match": "(\\\\[nstfbv\\\"\\?])\\b",
					"captures": {
						"1": {
							"name": "constant.character.escape"
						}
					}
				},
				{
					"comment": "Backslash doesn't seem to work with a \\b at the end, so put it in extra thingy",
					"match": "(\\\\|\\\\\\\\)(?:\\s|$)(.+)?",
					"captures": {
						"1": {
							"name": "constant.character.escape"
						}
					}
				},
				{
					"comment": "Code point, the regex matches numbers from 0-255",
					"match": "\\b(0*(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?[0-9]))\\b",
					"captures": {
						"1": {
							"name": "constant.numeric.decimal"
						}
					}
				},
				{
					"comment": "ASCII Chars",
					"match": "([\\x21-\\x7F])(?:\\s|$)",
					"captures": {
						"1": {
							"name": "string.quoted.single"
						}
					}
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"match": "(What the hell happened here\\?)(.*?)\\n",
					"captures": {
						"1": {
							"name": "meta.preprocessor.string"
						},
						"2": {
							"name": "comment.line"
						}
					}
				}
			]
		},
		"functions": {
			"patterns": [
				{
					"ref": "function_name:def",
					"format": "function:start",
					"name": "storage.type",
					"match": "I like to have fun, fun, fun, fun, fun, fun, fun, fun, fun, fun (\\S+)",
					"hoverText": "Declare the function $1",
					"captures": {
						"1": {
							"name": "entity.name.function"
						}
					}
				},
				{
					"ref": "function_name:ref",
					"name": "storage.type",
					"match": "(\\S+): whomst has summoned the almighty one",
					"hoverText": "Call the function $1",
					"captures": {
						"1": {
							"name": "entity.name.function"
						}
					}
				},
				{
					"name": "keyword.control",
					"ref": "function_end",
					"format": "function:end",
					"hoverText": "Exit a function. The return value can be defined by the programmer",
					"match": "\\b(right back at ya, buckaroo)\\b"
				},
				{
					"name": "keyword.control",
					"ref": "function_end",
					"format": "function:end",
					"hoverText": "Exit a function with return value 1",
					"match": "\\b(no, I don't think I will)\\b"
				},
				{
					"name": "keyword.control",
					"ref": "function_end",
					"format": "function:end",
					"hoverText": "Exit a function with return value 0",
					"match": "\\b(I see this as an absolute win)\\b"
				}
			]
		},
		"stack-operations": {
			"patterns": [
				{
					"name": "entity.name.function",
					"hoverText": "Pop a value from the stack into $1",
					"match": "not stonks (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Push $1 to the stack",
					"match": "stonks (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				}
			]
		},
		"logical-operations": {
			"patterns": [
				{
					"name": "entity.name.function",
					"hoverText": "Perform a logical AND on $1 with $2",
					"match": "bitconneeeeeeect (\\S+?(?: do you know de wey)?) (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Perform a logical NOT on $1",
					"match": "(\\S+(?: do you know de wey)?) \\\\s",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				}
			]
		},
		"register-manipulation": {
			"patterns": [
				{
					"name": "entity.name.function",
					"hoverText": "Set $1 to zero",
					"match": "sneak 100 (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Set $1 to $2",
					"match": "(\\S+(?: do you know de wey)?) is brilliant, but I like (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				}
			]
		},
		"arithmetic-operations": {
			"patterns": [
				{
					"name": "entity.name.function",
					"hoverText": "Increment $1 by one",
					"match": "upvote (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Decrement $1 by one",
					"match": "downvote (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Subtract $1 from the destination register $2",
					"match": "parry (\\S+(?: do you know de wey)?) you filthy casual (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Add $2 to the destination register $1",
					"match": "(\\S+(?: do you know de wey)?) units are ready, with (\\S+(?: do you know de wey)?) more well on the way",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Double the value of $1. This is done by a binary left shift",
					"match": "upgrades, people. Upgrades (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Halve the value of $1. This is done by a binary right shift",
					"match": "they had us in the first half, not gonna lie (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Multiply $1 by $2",
					"match": "(\\S+(?: do you know de wey)?) is getting out of hand, now there are (\\S+(?: do you know de wey)?) of them",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Divide $2 by $1",
					"match": "look at what (\\S+(?: do you know de wey)?) needs to mimic a fraction of (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#ascii-character"
								},
								{
									"include": "#decimal-number"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Calculate $1 to the power of $2",
					"match": "(\\S+(?: do you know de wey)?) UNLIMITED POWER (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#ascii-character"
								},
								{
									"include": "#decimal-number"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				}
			]
		},
		"io-operations": {
			"patterns": [
				{
					"name": "entity.name.function",
					"hoverText": "Print the ASCII character $1:a to the console",
					"match": "what can I say except (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"name": "string.quoted.single",
									"match": "\\b(\\d)\\b"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.function",
					"hoverText": "Read a byte from stdin into $1",
					"match": "let me in. LET ME IIIIIIIIN (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				}
			]
		},
		"jumps-and-markers": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "upgrade",
					"format": "combo",
					"tag": "upgrade_loop_start",
					"hoverText": "Define a jump marker that the \"fuck go back\" command jumps to"
				},
				{
					"name": "keyword.control",
					"match": "fuck go back",
					"format": "combo",
					"tag": "upgrade_loop_end",
					"hoverText": "Jump to the \"upgrade\" jump marker"
				},
				{
					"name": "keyword.control",
					"match": "where banana",
					"format": "combo",
					"tag": "banana_loop_end",
					"hoverText": "Jump to the \"banana\" jump marker"
				},
				{
					"name": "keyword.control",
					"match": "(?!where )banana",
					"format": "combo",
					"tag": "banana_loop_start",
					"hoverText": "Define a jump marker that the \"where banana\" command jumps to"
				},
				{
					"name": "keyword.control",
					"match": "return to monke (\\S+)",
					"format": "combo",
					"tag": "monke_loop_end",
					"hoverText": "Jump to the monke jump marker with the id $1",
					"captures": {
						"1": {
							"patterns": [
								{
									"comment": "Must include both an 'a' and an 'u' to be valid",
									"match": "\\b((?:a|u)*(?:au|ua)+(?:a|u)*)\\b",
									"name": "entity.name.type"
								},
								{
									"match": ".+",
									"name": "invalid.illegal"
								}
							]
						}
					}
				},
				{
					"name": "keyword.control",
					"match": "(?!to )monke (\\S+)",
					"format": "combo",
					"tag": "monke_loop_start",
					"hoverText": "Define a monke jump marker with the id $1",
					"captures": {
						"1": {
							"patterns": [
								{
									"comment": "Must include both an 'a' and an 'u' to be valid",
									"match": "\\b((?:a|u)*(?:au|ua)+(?:a|u)*)\\b",
									"name": "entity.name.type"
								},
								{
									"match": ".+",
									"name": "invalid.illegal"
								}
							]
						}
					}
				},
				{
					"name": "keyword.control",
					"hoverText": "Compare $1 and $2 and jump to the \"x wins\" marker for the larger value. If they are equal, no jump is performed.",
					"match": "who would win\\? (\\S+) or (\\S+)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "keyword.control",
					"hoverText": "Jump marker for the \"who would win?\" command. It will jump here if $1 is the larger value.",
					"match": "(\\S+) wins",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "keyword.control",
					"format": "combo",
					"tag": "corporate_comparison_end",
					"hoverText": "Compare $1 and $2 and jump to the \"they're the same picture\" jump marker if they are equal",
					"match": "corporate needs you to find the difference between (\\S+(?: do you know de wey)?) and (\\S+(?: do you know de wey)?)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"include": "#16bit-registers"
								},
								{
									"include": "#8bit-registers"
								},
								{
									"include": "#decimal-number"
								},
								{
									"include": "#ascii-character"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						}
					}
				},
				{
					"name": "keyword.control",
					"format": "combo",
					"tag": "corporate_comparison_start",
					"hoverText": "Jump marker for the \"corporate needs you to find the difference between a and b\" command. It will jump here if the values are equal.",
					"match": "they're the same picture"
				}
			]
		},
		"random-commands": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "guess I'll die",
					"hoverText": "Crash the program with a Segmentation Fault"
				},
				{
					"name": "keyword.control",
					"match": "confused stonks",
					"hoverText": "Jump to a random line of code that is decided at compilation time"
				},
				{
					"name": "entity.name.function",
					"match": "perfectly balanced as all things should be",
					"hoverText": "Restore balance to your code by randomly deleting half the commands at compile-time.\nWhen using this command multiple times, half the lines are deleted for every instance of this command."
				},
				{
					"name": "entity.name.function",
					"match": "wait, that's illegal",
					"hoverText": "Intentionally violates the System V ABI by modifying callee-saved registers without restoring their original value"
				}
			]
		},
		"debug-commands": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "it's a trap",
					"hoverText": "Raise SIGTRAP. If a debugger is attached, this breaks into the debugger."
				}
			]
		},
		"additions": {
			"patterns": [
				{
					"match": "\\s*(.+) (or draw 25)",
					"hoverText": "Add 25 to rax",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#commands"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"name": "entity.other.attribute-name"
						}
					}
				}
			]
		},
		"pointers": {
			"patterns": [
				{
					"match": "(\\S+) (do you know de wey)",
					"captures": {
						"1": {
							"patterns": [
								{
									"include": "#64bit-registers"
								},
								{
									"include": "#32bit-registers"
								},
								{
									"name": "invalid.illegal",
									"match": ".+"
								}
							]
						},
						"2": {
							"name": "entity.other.attribute-name"
						}
					}
				}
			]
		}
	},
	"scopeName": "source.memeasm"
}
